# -*- coding: utf-8 -*-
"""pandas_excel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O1UhgJYb8TfjYq-7cTAlabWrJk9udt39
"""

import pandas as pd

df1 = pd.read_excel("/content/drive/MyDrive/Aracaju.xlsx")
df2 = pd.read_excel("/content/drive/MyDrive/Fortaleza.xlsx")
df3 = pd.read_excel("/content/drive/MyDrive/Natal.xlsx")
df4 = pd.read_excel("/content/drive/MyDrive/Recife.xlsx")
df5 = pd.read_excel("/content/drive/MyDrive/Salvador.xlsx")

df = pd.concat([df1, df2, df3, df4, df5])

df.head()

df.tail()

#sample: pega uma amostra aleat√≥rio do arquivo
df.sample(5)

df.dtypes

#astype: altera o tipo de dado da coluna
df["LojaID"] = df["LojaID"].astype("object")

df.dtypes

#isnull: verificar valores faltantes
df.isnull().sum()

#cria uma coluna
df["Receita"] = df["Vendas"].mul(df["Qtde"])

df.head()

df["Receita"].max()

df["Receita"].min()

#retorna as tres maiores linhas da coluna
df.nlargest(3, "Receita")

df.nsmallest(3, "Receita")

df.groupby("Cidade")["Receita"].sum()

df.sort_values("Receita", ascending=False).head(10)

df["Data"] = df["Data"].astype("int64")

df.dtypes

#transforma a coluna em formato de Data
df["Data"] = pd.to_datetime(df["Data"])

df.dtypes

#agrupamento por ano
df.groupby(df["Data"].dt.year)["Receita"].sum()

#cria nova coluna (extrai o ano)
df["Ano_Venda"] = df["Data"].dt.year

df.sample(5)

df["Mes_venda"], df["Dia_venda"] = (df["Data"].dt.month, df["Data"].dt.day)

df.sample(5)

#retorna data mais antiga
df["Data"].min()

#calcula a diferenca de dias
df["Diferenca_dias"] = df["Data"] - df["Data"].min()

df.sample(5)

#cria coluna (trimestre)
df["Trimestre_venda"] = df["Data"].dt.quarter

df.sample(5)

#filtro de busca: mes(03) e ano(2019)
vendas_marco_19 = df.loc[(df["Data"].dt.year == 2019) & (df["Data"].dt.month == 3)]

vendas_marco_19

#numero da loja: numero de vendas
df["LojaID"].value_counts(ascending=False)

#grafico barra verticais
df["LojaID"].value_counts(ascending=False).plot.bar()

#grafico barra horizontais
df["LojaID"].value_counts(ascending=True).plot.barh();

#grafico pizza: agrupamento por ano
df.groupby(df["Data"].dt.year)["Receita"].sum().plot.pie();

#total venda por cidade
df["Cidade"].value_counts()

import matplotlib.pyplot as plt
df["Cidade"].value_counts().plot.bar(title="Total de vendas por Cidade", color="red")
plt.xlabel("Cidade")
plt.ylabel("Total vendas")

plt.style.use("ggplot")

df.groupby(df["Mes_venda"])["Qtde"].sum().plot(title="Total de produtos vendidos por mes")
plt.xlabel("Mes")
plt.ylabel("Total de produtos vendidos")
plt.legend()

df.groupby(df["Mes_venda"])["Qtde"].sum()

df_2019 = df[df["Ano_Venda"] == 2019]

#marcadores: o, v, *
df_2019.groupby(df_2019["Mes_venda"])["Qtde"].sum().plot(marker="o")
plt.xlabel("Mes")
plt.ylabel("Total de produtos vendidos")
plt.legend();

plt.hist(df["Qtde"], color="blue");

plt.scatter(x=df_2019["Dia_venda"], y = df_2019["Receita"])

df_2019.groupby(df_2019["Mes_venda"])["Qtde"].sum().plot(marker = "v")
plt.title("Quantidade de produtos vendidos x Mes")
plt.xlabel("Mes")
plt.ylabel("Total de produtos vendidos")
plt.legend()
plt.savefig("Grafico_Qtde_Mes.png")